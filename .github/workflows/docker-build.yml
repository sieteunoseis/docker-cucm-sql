name: Build and Push Docker Image

on:
  push:
    branches: [ main ]
    paths-ignore:
      # Documentation and markdown files
      - '**/*.md'
      - 'docs/**'
      
      # Images
      - 'screenshots/**'
      - '**/*.png'
      - '**/*.jpg'
      - '**/*.jpeg'
      - '**/*.gif'
      - '**/*.svg'
      - '**/*.webp'
      
      # Configuration files that don't affect the build
      - '.gitignore'
      - '.dockerignore'
      - '*.example'
      
      # Environment files
      - 'env/**'

  workflow_dispatch:

jobs:
  build:
    runs-on: ubuntu-latest
    permissions:
      contents: read
      packages: write
      security-events: write # needed for vulnerability scanning
    
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
      
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3
      
      - name: Get package version
        id: package-version
        run: |
          PACKAGE_VERSION=$(node -p "require('./package.json').version")
          echo "version=$PACKAGE_VERSION" >> $GITHUB_OUTPUT
      
      # Scan for vulnerabilities in dependencies
      - name: Run Dependency Scan
        uses: aquasecurity/trivy-action@master
        with:
          scan-type: 'fs'
          scan-ref: '.'
          format: 'sarif'
          output: 'trivy-results.sarif'
          severity: 'CRITICAL,HIGH'
          
      - name: Upload Scan Results
        uses: github/codeql-action/upload-sarif@v2
        if: always() # Ensure this runs even if previous step fails
        with:
          sarif_file: 'trivy-results.sarif'
          category: 'dependency-scan'
      
      # Only push to GitHub Container Registry since it doesn't require additional secrets
      - name: Login to GitHub Container Registry
        uses: docker/login-action@v3
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}
      
      - name: Build and push
        uses: docker/build-push-action@v5
        with:
          context: .
          platforms: linux/amd64
          push: true
          cache-from: type=gha
          cache-to: type=gha,mode=max
          tags: |
            ghcr.io/${{ github.repository }}:latest
            ghcr.io/${{ github.repository }}:${{ steps.package-version.outputs.version }}
          labels: |
            org.opencontainers.image.title=Cisco CUCM SQL Editor
            org.opencontainers.image.description=Web application for executing and managing SQL queries against Cisco CUCM databases
            org.opencontainers.image.version=${{ steps.package-version.outputs.version }}
            org.opencontainers.image.source=${{ github.server_url }}/${{ github.repository }}
      
      # Scan the built image for vulnerabilities
      - name: Scan Container Image
        uses: aquasecurity/trivy-action@master
        with:
          image-ref: 'ghcr.io/${{ github.repository }}:${{ steps.package-version.outputs.version }}'
          format: 'sarif'
          output: 'trivy-image-results.sarif'
          severity: 'CRITICAL,HIGH'
          
      - name: Upload Image Scan Results
        uses: github/codeql-action/upload-sarif@v2
        if: always() # Ensure this runs even if previous step fails
        with:
          sarif_file: 'trivy-image-results.sarif'
          category: 'container-scan'